{
  "version": 3,
  "sources": ["../../server.ts", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.tsx", "/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/root.tsx", "../../app/components/app-header.tsx", "/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/$placeId.tsx", "../../app/db.server.ts", "../../app/models/place.server.ts", "/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/about.tsx", "/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/netlify\";\nimport * as build from \"@remix-run/dev/server-build\";\n\n/*\n * Returns a context object with at most 3 keys:\n *  - `netlifyGraphToken`: raw authentication token to use with Netlify Graph\n *  - `clientNetlifyGraphAccessToken`: For use with JWTs generated by\n *    `netlify-graph-auth`.\n *  - `netlifyGraphSignature`: a signature for subscription events. Will be\n *    present if a secret is set.\n */\nfunction getLoadContext(event: any, context: any) {\n  let rawAuthorizationString;\n  let netlifyGraphToken;\n\n  if (event.authlifyToken != null) {\n    netlifyGraphToken = event.authlifyToken;\n  }\n\n  let authHeader = event.headers[\"authorization\"];\n  let graphSignatureHeader = event.headers[\"x-netlify-graph-signature\"];\n\n  if (authHeader != null && /Bearer /gi.test(authHeader)) {\n    rawAuthorizationString = authHeader.split(\" \")[1];\n  }\n\n  let loadContext = {\n    clientNetlifyGraphAccessToken: rawAuthorizationString,\n    netlifyGraphToken: netlifyGraphToken,\n    netlifyGraphSignature: graphSignatureHeader,\n  };\n\n  // Remove keys with undefined values\n  Object.keys(loadContext).forEach((key) => {\n    if (loadContext[key] == null) {\n      delete loadContext[key];\n    }\n  });\n\n  return loadContext;\n}\n\nexport const handler = createRequestHandler({\n  build,\n  getLoadContext,\n  mode: process.env.NODE_ENV,\n});\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "\nimport * as entryServer from \"/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/entry.server.tsx\";\nimport * as route0 from \"/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/root.tsx\";\nimport * as route1 from \"/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/$placeId.tsx\";\nimport * as route2 from \"/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/about.tsx\";\nimport * as route3 from \"/Users/pavelpocho/Projects/reserveroo_web_app/Reserveroo/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$placeId\": {\n      id: \"routes/$placeId\",\n      parentId: \"root\",\n      path: \":placeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport { ServerStyleSheet } from 'styled-components';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n\n  const sheet = new ServerStyleSheet();\n\n  let markup = renderToString(\n    sheet.collectStyles(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n      />\n    )\n  );\n  const styles = sheet.getStyleTags();\n  markup = markup.replace(\"__STYLES__\", styles);\n  \n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport { AppHeader } from \"./components/app-header\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Reserveroo\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\n      </head>\n      <body className=\"h-full\">\n        <AppHeader>Reserveroo</AppHeader>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { LinksFunction } from \"@remix-run/react/routeModules\"\nimport styled from 'styled-components';\n\nconst Text = styled.h6`\n  color: red;\n`;\n\nexport const AppHeader: React.FC = ({ children }) => {\n  return <div className='app-header'>\n    <Text>{children}</Text>\n  </div>\n}", "import { useLoaderData, useParams } from \"@remix-run/react\"\nimport { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { getPlace, Place } from \"~/models/place.server\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  return getPlace({ id: parseInt(params.placeId ?? '') })\n}\n\nexport default function PlaceDetail() {\n\n  const place = useLoaderData<Place>();\n\n  return (\n    <div>\n      {place.id}\n      {place.name}\n    </div>\n  )\n}", "import { PrismaClient } from \"@prisma/client\";\nimport invariant from \"tiny-invariant\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = getClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = getClient();\n  }\n  prisma = global.__db__;\n}\n\nfunction getClient() {\n  const { DATABASE_URL } = process.env;\n  invariant(typeof DATABASE_URL === \"string\", \"DATABASE_URL env var not set\");\n\n  const databaseUrl = new URL(DATABASE_URL);\n\n  // const isLocalHost = databaseUrl.hostname === \"localhost\";\n\n  // const PRIMARY_REGION = isLocalHost ? null : process.env.PRIMARY_REGION;\n  // const FLY_REGION = isLocalHost ? null : process.env.FLY_REGION;\n\n  // const isReadReplicaRegion = !PRIMARY_REGION || PRIMARY_REGION === FLY_REGION;\n\n  // if (!isLocalHost) {\n  //   databaseUrl.host = `${FLY_REGION}.${databaseUrl.host}`;\n  //   if (!isReadReplicaRegion) {\n  //     // 5433 is the read-replica port\n  //     databaseUrl.port = \"5432\";\n  //   }\n  // }\n\n  console.log(`\uD83D\uDD0C setting up prisma client to ${databaseUrl.host}`);\n  // NOTE: during development if you change anything in this function, remember\n  // that this only runs once per server restart and won't automatically be\n  // re-run per request like everything else is. So if you need to change\n  // something in this file, you'll need to manually restart the server.\n  const client = new PrismaClient({\n    datasources: {\n      db: {\n        url: DATABASE_URL,\n      },\n    },\n  });\n  // connect eagerly\n  client.$connect();\n\n  return client;\n}\n\nexport { prisma };\n", "import type { Place } from \"@prisma/client\";\nimport { Note } from \"esbuild\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Place } from \"@prisma/client\";\n\nexport const getPlace = ({ id }: Pick<Place, 'id'>) => (prisma.place.findFirst({\n  where: { id },\n}));\n\nexport const getPlaceList = async () => {return await prisma.place.findMany({\n  select: { id: true, name: true },\n  orderBy: { name: 'desc' },\n})};\n\nexport const createPlace = ({ name }: Pick<Place, 'name'>) => (prisma.place.create({\n  data: {\n    name\n  },\n}));\n\nexport const updatePlace = ({ id, name }: Pick<Place, 'id' | 'name'>) => (prisma.place.update({\n  where: {\n    id\n  },\n  data: {\n    name\n  }\n}));\n\nexport const deleteNote = ({ id }: Pick<Place, 'id'>) => (prisma.place.deleteMany({\n    where: { id },\n}));\n", "import { Link, useLoaderData } from \"@remix-run/react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1>\n        Welcome to the best place in the world.\n      </h1>\n      <Link to={'/'} >See place list.</Link>\n    </div>\n  );\n}", "import type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { getPlaceList, Place } from \"~/models/place.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return await getPlaceList();\n};\n\nexport default function Index() {\n  const places = useLoaderData<Place[]>();\n  console.log(places);\n  return (\n    <div>\n      <h6>Hello. See places here:</h6>\n      {places.map((place) => (\n        <div key={place.id}><Link to={`/${place.id}`}>{place.name}</Link></div>\n      ))}\n      <Link to={'/about'}>About us</Link>\n    </div>\n  );\n}", "export default {'version':'3f3794be','entry':{'module':'/build/entry.client-LR2JYNNE.js','imports':['/build/_shared/chunk-HDUZ7ZCG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XTYHR3RZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$placeId':{'id':'routes/$placeId','parentId':'root','path':':placeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$placeId-P6W2VV2T.js','imports':['/build/_shared/chunk-ORVGFXRW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-XNYVUVD2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JSMQMO2X.js','imports':['/build/_shared/chunk-ORVGFXRW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-3F3794BE.js'};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ADDvB,qBAAqC;;;AEArC;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAC/B,+BAAiC;AAElB,uBACb,SACA,oBACA,iBACA,cACA;AAEA,QAAM,QAAQ,IAAI;AAElB,MAAI,SAAS,kCACX,MAAM,cACJ,oCAAC,0BAAD;AAAA,IACE,SAAS;AAAA,IACT,KAAK,QAAQ;AAAA;AAInB,QAAM,SAAS,MAAM;AACrB,WAAS,OAAO,QAAQ,cAAc;AAEtC,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AC7Bb;AAAA;AAAA;AAAA;AAAA;AAMA,oBAOO;;;ACZP,gCAAmB;AAEnB,IAAM,OAAO,kCAAO;AAAA;AAAA;AAIb,IAAM,YAAsB,CAAC,EAAE,eAAe;AACnD,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACpB,oCAAC,MAAD,MAAO;AAAA;;;ADOJ,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGG,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAK,WAAU;AAAA,KACxB,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,OACC,OAAO,aAAa,cAAc,eAAe,OAEpD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,WAAD,MAAW,eACX,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AEnCR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyC;;;ACAzC,oBAA6B;AAC7B,4BAAsB;AAEtB,IAAI;AAUJ,IAAI,OAAuC;AACzC,WAAS;AAAA,OACJ;AACL,MAAI,CAAC,OAAO,QAAQ;AAClB,WAAO,SAAS;AAAA;AAElB,WAAS,OAAO;AAAA;AAGlB,qBAAqB;AACnB,QAAM,EAAE,iBAAiB,QAAQ;AACjC,qCAAU,OAAO,iBAAiB,UAAU;AAE5C,QAAM,cAAc,IAAI,IAAI;AAiB5B,UAAQ,IAAI,yCAAkC,YAAY;AAK1D,QAAM,SAAS,IAAI,2BAAa;AAAA,IAC9B,aAAa;AAAA,MACX,IAAI;AAAA,QACF,KAAK;AAAA;AAAA;AAAA;AAKX,SAAO;AAEP,SAAO;AAAA;;;ACnDF,IAAM,WAAW,CAAC,EAAE,SAA6B,OAAO,MAAM,UAAU;AAAA,EAC7E,OAAO,EAAE;AAAA;AAGJ,IAAM,eAAe,YAAY;AAAC,SAAO,MAAM,OAAO,MAAM,SAAS;AAAA,IAC1E,QAAQ,EAAE,IAAI,MAAM,MAAM;AAAA,IAC1B,SAAS,EAAE,MAAM;AAAA;AAAA;;;AFTZ,IAAM,SAAyB,OAAO,EAAE,aAAa;AAC1D,SAAO,SAAS,EAAE,IAAI,SAAS,OAAO,WAAW;AAAA;AAGpC,uBAAuB;AAEpC,QAAM,QAAQ;AAEd,SACE,oCAAC,OAAD,MACG,MAAM,IACN,MAAM;AAAA;;;AGfb;AAAA;AAAA;AAAA;AAAA,oBAAoC;AAErB,iBAAiB;AAC9B,SACE,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,4CAGJ,oCAAC,oBAAD;AAAA,IAAM,IAAI;AAAA,KAAM;AAAA;;;ACRtB;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAoC;AAG7B,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,SAAO,MAAM;AAAA;AAGA,iBAAiB;AAC9B,QAAM,SAAS;AACf,UAAQ,IAAI;AACZ,SACE,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,4BACH,OAAO,IAAI,CAAC,UACX,oCAAC,OAAD;AAAA,IAAK,KAAK,MAAM;AAAA,KAAI,oCAAC,oBAAD;AAAA,IAAM,IAAI,IAAI,MAAM;AAAA,KAAO,MAAM,SAEvD,oCAAC,oBAAD;AAAA,IAAM,IAAI;AAAA,KAAU;AAAA;;;AClB1B,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,mBAAkB,EAAC,MAAK,mBAAkB,YAAW,QAAO,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,sCAAqC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ATOhtC,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;;;AF5Bd,wBAAwB,OAAY,SAAc;AAChD,MAAI;AACJ,MAAI;AAEJ,MAAI,MAAM,iBAAiB,MAAM;AAC/B,wBAAoB,MAAM;AAAA;AAG5B,MAAI,aAAa,MAAM,QAAQ;AAC/B,MAAI,uBAAuB,MAAM,QAAQ;AAEzC,MAAI,cAAc,QAAQ,YAAY,KAAK,aAAa;AACtD,6BAAyB,WAAW,MAAM,KAAK;AAAA;AAGjD,MAAI,cAAc;AAAA,IAChB,+BAA+B;AAAA,IAC/B;AAAA,IACA,uBAAuB;AAAA;AAIzB,SAAO,KAAK,aAAa,QAAQ,CAAC,QAAQ;AACxC,QAAI,YAAY,QAAQ,MAAM;AAC5B,aAAO,YAAY;AAAA;AAAA;AAIvB,SAAO;AAAA;AAGF,IAAM,UAAU,yCAAqB;AAAA,EAC1C;AAAA,EACA;AAAA,EACA,MAAM;AAAA;",
  "names": []
}
